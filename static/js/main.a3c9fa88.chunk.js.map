{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","id","UserInfo","postUser","PostInfo","post","title","user","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"k38IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGD,EAAQE,OAGV,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,WCdFC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,UCLrCC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACtB,mBAAGV,UAAU,WAAWE,KAAI,iBAAYQ,EAASP,OAAjD,SACGO,EAAST,SCADU,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAEtB,sBAAKZ,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGY,EAAKC,QAGPD,EAAKE,MACJ,8BACG,eAED,cAAC,EAAD,CAAUJ,SAAUE,EAAKE,aAM/B,mBAAGd,UAAU,iBAAb,SACGY,EAAKR,OAGR,uBACCQ,EAAKN,SAASS,OAAS,EACpB,cAAC,EAAD,CAAaT,SAAUM,EAAKN,WAC5B,mBAAG,UAAQ,oBAAX,iCC1BKU,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKjB,UAAU,WAAf,SACGiB,EAAMV,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKJ,UCWnB,IAAMS,EAAQC,EAAgBX,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CE,MAZeK,EAYDP,EAAKO,OAXZC,EAAgBC,MAAK,SAAAP,GAAI,OAAIA,EAAKN,KAAOW,MAC7C,MAWHb,UARmBgB,EAQGV,EAAKJ,GAPpBe,EAAmBC,QAAO,SAAAzB,GAAO,OAAIA,EAAQuB,SAAWA,MAC5D,QAFL,IAAqBA,EALJH,KAgBJM,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUiB,MAAOA,QCtBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a3c9fa88.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {comment.name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\n\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ postUser }) => (\n  <a className=\"UserInfo\" href={`mailto:${postUser.email}`}>\n    {postUser.name}\n  </a>\n);\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => (\n\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n\n      {post.user && (\n        <p>\n          {' Posted by  '}\n\n          <UserInfo postUser={post.user} />\n        </p>\n      )}\n\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n\n    <hr />\n    {post.comments.length > 0\n      ? <CommentList comments={post.comments} />\n      : <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    }\n\n  </div>\n);\n","import './PostList.scss';\nimport { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo key={post.id} post={post} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUser(userId) {\n  return usersFromServer.find(user => user.id === userId)\n  || null;\n}\n\nfunction getComments(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n  || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUser(post.userId),\n  comments: getComments(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}